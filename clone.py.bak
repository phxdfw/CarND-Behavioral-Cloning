import csv
import cv2
import numpy as np
from scipy import ndimage

lines = []
with open('../data/driving_log.csv') as csvfile:
    reader = csv.reader(csvfile)
    for line in reader:
        lines.append(line)

images = []
measurements = []
for line in lines:
    source_path = line[0]
    filename = source_path.split('\\')[-1]
    current_path = '../data/IMG/{0}'.format(filename)
    image = ndimage.imread(current_path)
    images.append(image)
    
    measurement = float(line[3])
    measurements.append(measurement)
    
augmented_images, augmented_measurements = [], []
for image, measurement in zip(images, measurements):
    augmented_images.append(image)
    augmented_images.append(cv2.flip(image, 1))
    augmented_measurements.append(measurement)
    augmented_measurements.append(-measurement)

X_train = np.array(augmented_images)
y_train = np.array(augmented_measurements)

from keras.models import Sequential
from keras.layers import Dense, Flatten, Lambda, Cropping2D, Activation, Dropout, Convolution2D
from keras.layers.convolutional import Conv2D
from keras.layers.pooling import MaxPooling2D

model = Sequential()
model.add(Lambda(lambda x: x / 255.0 - 0.5, input_shape=(160, 320, 3)))
model.add(Cropping2D(cropping=((70, 26), (0, 0))))
model.add(Convolution2D(6, (5, 5), border_mode='same', activation='relu'))
model.add(MaxPooling2D(4, 4))
model.add(Convolution2D(16, (5, 5), border_mode='same', activation='relu'))
model.add(MaxPooling2D(2, 4))
model.add(Convolution2D(33, (3, 3), border_mode='same', activation='relu'))
model.add(MaxPooling2D(1, 2))
model.add(Flatten())
model.add(Dense(190))
model.add(Dropout(0.75))
model.add(Activation('relu'))
model.add(Dense(84))
model.add(Activation('relu'))
model.add(Dense(1))

model.compile(loss='mse', optimizer='adam')
model.fit(X_train, y_train, validation_split=0.2, shuffle=True, epochs=5)

model.save('model.h5')
exit()